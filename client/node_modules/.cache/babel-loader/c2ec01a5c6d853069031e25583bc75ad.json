{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionType from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["D:/Sweta/SelfLearning/React/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionType","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAUA,UAAV,EAAsBC,IAAtB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,oBAA5C;AAEA,OAAOC,cAAP,MAA2B,cAA3B;AAEA,SACIC,SADJ,EAEIC,+BAFJ,QAGS,+BAHT;AAKE,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEF,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAkCQ,QAAlC,CAAjC;AAEA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AAEH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CACZI,cAAc,CAACgB,uBADH,EAC4BX,qBAD5B,CAAhB;AAGH;AAED,OAAO,UAAUY,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import  { takeLatest, call, put, all } from 'redux-saga/effects';\r\n\r\nimport ShopActionType from './shop.types';\r\n\r\nimport {\r\n    firestore,\r\n    convertCollectionsSnapshotToMap\r\n  } from '../../firebase/firebase.utils';\r\n\r\n  import { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired');\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}